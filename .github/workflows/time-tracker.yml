name: Time Tracking & Velocity Analysis

on:
  issues:
    types: [opened, closed, labeled, unlabeled]
  pull_request:
    types: [opened, closed, ready_for_review, converted_to_draft]
  schedule:
    # Run daily at 10 AM UTC for velocity tracking
    - cron: '0 10 * * *'
  workflow_dispatch:

jobs:
  track-issue-transitions:
    if: github.event_name == 'issues'
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Track Issue State Changes
        uses: actions/github-script@v7
        env:
          ZENHUB_API_KEY: ${{ secrets.ZENHUB_API_KEY }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const scriptPath = '.github/scripts/analyze-velocity.js';
            
            if (fs.existsSync(scriptPath)) {
              const { trackIssueTransition } = require(scriptPath);
              
              const issueData = {
                number: context.payload.issue.number,
                title: context.payload.issue.title,
                state: context.payload.issue.state,
                labels: context.payload.issue.labels,
                created_at: context.payload.issue.created_at,
                closed_at: context.payload.issue.closed_at,
                action: context.payload.action
              };
              
              await trackIssueTransition(github, context, issueData);
            }

  analyze-velocity:
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Analyze Team Velocity
        uses: actions/github-script@v7
        env:
          ZENHUB_API_KEY: ${{ secrets.ZENHUB_API_KEY }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const scriptPath = '.github/scripts/analyze-velocity.js';
            
            if (fs.existsSync(scriptPath)) {
              const { analyzeVelocity, postVelocityComment } = require(scriptPath);
              
              try {
                const velocityData = await analyzeVelocity(github, context);
                await postVelocityComment(github, context, velocityData);
                
                console.log('Velocity analysis completed successfully');
                console.log(JSON.stringify(velocityData, null, 2));
              } catch (error) {
                console.error('Error analyzing velocity:', error);
                throw error;
              }
            }

  check-estimates-accuracy:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check Estimate Accuracy
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const scriptPath = '.github/scripts/estimate-completion.js';
            
            if (fs.existsSync(scriptPath)) {
              const { checkEstimateAccuracy } = require(scriptPath);
              
              try {
                const accuracy = await checkEstimateAccuracy(github, context);
                
                // Post accuracy report as comment
                const { data: issues } = await github.rest.issues.listForRepo({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  state: 'open',
                  labels: 'metrics-tracking'
                });
                
                let trackingIssue = issues[0];
                if (!trackingIssue) {
                  const { data: newIssue } = await github.rest.issues.create({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    title: 'ðŸ“Š Metrics Tracking Issue',
                    body: 'This issue tracks various project metrics and reports.',
                    labels: ['metrics-tracking']
                  });
                  trackingIssue = newIssue;
                }
                
                const accuracyReport = `## ðŸŽ¯ Estimate Accuracy Report
                
**Overall Accuracy**: ${accuracy.overallAccuracy}%
**Total Estimates Checked**: ${accuracy.totalEstimates}
**On-time Completions**: ${accuracy.onTimeCompletions}
**Average Variance**: ${accuracy.averageVariance} hours
                
**Recommendations**:
${accuracy.recommendations.map(rec => `- ${rec}`).join('\n')}
                
*Report generated on: ${new Date().toISOString()}*`;
                
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: trackingIssue.number,
                  body: accuracyReport
                });
                
                console.log('Estimate accuracy report posted successfully');
              } catch (error) {
                console.error('Error checking estimate accuracy:', error);
              }
            }